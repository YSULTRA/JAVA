# Library Management System - README

## Overview

This Java program implements a Library Management System with two main user roles: librarians and members. Librarians can manage members, books, and view member details, while members can browse, borrow, return books, pay fines, and view their borrowed books.

## Code Structure

### Main Class (`org.example.Main`)

- The `Main` class serves as the entry point for the program.
- It presents a menu to the user, allowing them to choose between librarian and member roles.
- The program loops until the user selects the "Exit" option.
- It then navigates to the respective role-specific functionality within the program.

### Librarian Class (`org.example.Librarian`)

- The `Librarian` class contains functionalities specific to librarians.
- It provides options for librarians to register members, remove members, manage books (add/remove), and view member and book information.
- Librarians can access these options via the `printLibrarianInterface` menu.

### Member Class (`org.example.member`)

- The `member` class handles member-related operations.
- It manages member registration, login, and user-specific functionalities like browsing available books, issuing, returning books, paying fines, and listing borrowed books.
- Members are uniquely identified using their name and phone number.

### Book Class (`org.example.Book`)

- The `Book` class represents books in the library.
- Each book has attributes such as title, author name, quantity, unique book ID, issue date, and return date.
- It includes methods for adding and removing books, viewing available books, issuing books to members, calculating fines, and returning books.

## Unique Identification

- Members are uniquely identified using a combination of their **name** and **phone number**. This ensures that each member has a unique identity within the system. Two members cannot have same number.
- Books are assigned a unique **book ID** when they are added to the library. This ID is used to identify and manage individual books. Book ID is automatically generated by Code.
- Book IDs are used to issue, return, and track books for specific members.

## Code Mechanism

1. The program starts by displaying a menu in the `Main` class, allowing the user to select either the librarian or member role.

2. Once a role is selected, the program enters a loop specific to that role. For librarians, it displays the librarian interface, and for members, it prompts for login information.

3. Based on the user's choices within the selected role, the program calls methods from the `Librarian`, `member`, and `Book` classes to perform actions such as member registration, book management, and user-specific operations.

4. The code handles exceptions, ensures data integrity (e.g., preventing duplicate phone numbers for members), and calculates fines for overdue books.

5. The program continues to execute until the user selects the "Exit" option.

# -------------------------------------------------------------------------------------------------------------#
This README provides an overview of the code structure, how it works, the unique identification of members and book IDs, and the code's mechanism.

